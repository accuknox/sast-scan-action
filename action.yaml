name: "AccuKnox SQ-SAST Scanner"
description: "Run SonarQube-based SAST scan and upload results to AccuKnox Panel."

branding: 
  icon: "shield" 
  color: "purple"

inputs:
  skip_sonar_scan:
    description: 'Whether to skip the SonarQube scan.'
    required: false
    default: 'false'
  sonar_project_key:
    description: 'SonarQube project key'
    required: true
  sonar_organization_id:
    description: 'SonarQube organization ID (cloud only)'
    required: false
  sonar_token:
    description: 'SonarQube authentication token'
    required: true
  sonar_host_url:
    description: 'SonarQube host URL'
    required: true
  soft_fail:
    description: 'Do not fail the pipeline if scan finds issues'
    required: false
    default: 'false'
  accuknox_endpoint:
    description: 'AccuKnox CSPM panel endpoint URL'
    required: true
  accuknox_token:
    description: 'AccuKnox authentication token'
    required: true
  accuknox_label:
    description: 'Label for associating scan results in AccuKnox'
    required: true

runs:
  using: "composite"
  steps:
    - name: Run AccuKnox SQ-SAST Scan
      shell: bash
      env:
        SKIP_SONAR_SCAN: ${{ inputs.skip_sonar_scan }}
        SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
        SONAR_ORG_ID: ${{ inputs.sonar_organization_id }}
        SONAR_TOKEN: ${{ inputs.sonar_token }}
        SONAR_HOST_URL: ${{ inputs.sonar_host_url }}
        SOFT_FAIL: ${{ inputs.soft_fail }}
        ACCUKNOX_ENDPOINT: ${{ inputs.accuknox_endpoint }}
        ACCUKNOX_TOKEN: ${{ inputs.accuknox_token }}
        ACCUKNOX_LABEL: ${{ inputs.accuknox_label }}
      run: |
        SOFT_FAIL="${SOFT_FAIL//[$'\t\r\n ']}"
        SOFT_FAIL_ARG=""
        if [ "$SOFT_FAIL" = "true" ]; then
          SOFT_FAIL_ARG="--softfail"
        fi

        echo "Downloading AccuKnox ASPM Scanner..."
        curl -L https://github.com/accuknox/aspm-scanner-cli/releases/download/v0.13.4/accuknox-aspm-scanner -o accuknox-aspm-scanner
        chmod +x accuknox-aspm-scanner

        # Build SonarQube command string
        CMD_ARGS="-Dsonar.projectKey=$SONAR_PROJECT_KEY \
        -Dsonar.token=$SONAR_TOKEN \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.qualitygate.wait=true"

        [ -n "$SONAR_ORG_ID" ] && CMD_ARGS="$CMD_ARGS -Dsonar.organization=$SONAR_ORG_ID"
        [ "$SKIP_SONAR_SCAN" = "true" ] && CMD_ARGS="--skip-sonar-scan $CMD_ARGS"

        # Run the scanner (AccuKnox env variables now used instead of CLI args)
        echo "./accuknox-aspm-scanner scan $SOFT_FAIL_ARG sq-sast --command \"$CMD_ARGS\" --repo-url \"$GITHUB_REPOSITORY\" --branch \"${GITHUB_REF#refs/heads/}\" --commit-sha \"$GITHUB_SHA\" --pipeline-url \"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID\" --container-mode"
        ./accuknox-aspm-scanner scan $SOFT_FAIL_ARG sq-sast --command "$CMD_ARGS" \
          --repo-url "$GITHUB_REPOSITORY" \
          --branch "${GITHUB_REF#refs/heads/}" \
          --commit-sha "$GITHUB_SHA" \
          --pipeline-url "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
          --container-mode
